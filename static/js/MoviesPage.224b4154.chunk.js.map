{"version":3,"file":"static/js/MoviesPage.224b4154.chunk.js","mappings":"uMAgCA,MA5BA,YAAyC,IAAnBA,EAAkB,EAAlBA,WAAYC,EAAM,EAANA,GAC1BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGH,EAAWI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACd,yBACE,SAAC,KAAD,CAAML,GAAE,UAAKA,GAAL,OAAUI,GAAME,MAAOL,EAA/B,SACGI,KAFID,U,yICoDjB,MAxDA,WAAuB,IAAD,EACpB,GAAwCG,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCC,EAAAA,EAAAA,UAAQ,UAACF,EAAaG,IAAI,sBAAlB,QAAmC,IAAjF,eAAoBC,GAApB,WACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOX,EAAP,KAAmBc,EAAnB,KAyCA,OAvCAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAoBP,EAAaG,IAAI,SAEtCI,GAIDP,IACFQ,EAAAA,EAAAA,IAAiBD,GAAmBE,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACnB,IAAnBA,EAAQC,OAKZN,EAAcK,GAJZE,MAAM,4CAOX,CAACZ,KAsBF,UAACa,EAAA,EAAD,YACE,kBAAMC,SArBV,SAAwBC,GACtBA,EAAEC,iBACF,IAAIC,EAAaF,EAAEG,cAAcC,SAASC,YAGrCH,EAAWI,OAMhBpB,EAAgB,CAAEqB,MAAOL,EAAWI,MAAME,gBAE1CnB,EAAea,EAAWI,MAAME,eAChCN,EAAWI,MAAQ,IARjBT,MAAM,uCAeN,WACE,kBAAOY,KAAK,OAAOC,YAAY,YAAYC,KAAK,iBAChD,mBAAQF,KAAK,SAAb,uBAGDjC,IAAc,SAACoC,EAAA,EAAD,CAAYpC,WAAYA,EAAYC,GAAI,U,0MCvDvDoC,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,qCAAwCF,IAD1D,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBJ,IAAAA,IAAA,gBAAmBI,EAAnB,oBAAsCN,IADxD,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,uFACkBJ,IAAAA,IAAA,gBAAmBI,EAAnB,4BAA8CN,IADhE,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,uFACkBJ,IAAAA,IAAA,gBAAmBI,EAAnB,4BAA8CN,IADhE,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAexB,EAAtB,+CAAO,OAAP,oBAAO,WAAgCY,GAAhC,uFACkBU,IAAAA,IAAA,+BAAkCF,EAAlC,kBAA+CR,EAA/C,YADlB,cACCW,EADD,yBAEEA,EAASC,MAFX,kEAtBPF,IAAAA,SAAAA,QAAyB","sources":["Components/MoviesList/MoviesList.js","Views/MoviesPage/MoviesPage.js","services/moviesApi.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\r\nimport propTypes from 'prop-types';\r\n// import s from 'MoviesList.module.css'\r\n\r\nfunction MoviesList({ moviesList, to }) {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <ul>\r\n      {moviesList.map(({ id, title }) => (\r\n        <li key={id}>\r\n          <Link to={`${to}${id}`} state={location}>\r\n            {title}\r\n          </Link>\r\n          {/* переход на фильм по id-параметру с адресной строки*/}\r\n          {/* записываем в location откуда пришли для кнопки Go back */}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nMoviesList.propTypes = {\r\n  to: propTypes.string.isRequired,\r\n  moviesList: propTypes.arrayOf(\r\n    propTypes.shape({\r\n      id: propTypes.number.isRequired,\r\n      title: propTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default MoviesList;\r\n","import { useState, useEffect } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { fetchSearchValue } from '../../services/moviesApi';\r\nimport Container from '../../Components/Container';\r\nimport MoviesList from '../../Components/MoviesList';\r\n\r\nfunction MoviesPage() {\r\n  const [searchParams, setSearchParams] = useSearchParams(); // адресная строка\r\n  const [searchValue, setSearchValue] = useState(searchParams.get('searchValue')?? '');\r\n  const [moviesList, setMoviesList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    //получаем через метод has пара-тр с адресной строки\r\n    const searchParamsQuery = searchParams.get('query');\r\n\r\n    if (!searchParamsQuery) {\r\n      return;\r\n    }\r\n\r\n    if (searchParams) {\r\n      fetchSearchValue(searchParamsQuery).then(({ results }) => {\r\n        if (results.length === 0) {\r\n          alert(\"We didn't find anything, try again.\");\r\n          return;\r\n        }\r\n\r\n        setMoviesList(results);\r\n      });\r\n    }\r\n  }, [searchParams]);\r\n\r\n  function getSearchValue(e) {\r\n    e.preventDefault();\r\n    let inputValue = e.currentTarget.children.searchValue;\r\n    // console.log(\"⭐ ~ inputValue\", inputValue.value)\r\n\r\n    if (!inputValue.value) {\r\n      alert('Enter something to start searching');\r\n      return;\r\n    }\r\n\r\n    // записываем введенный запрос в адр.строку\r\n    setSearchParams({ query: inputValue.value.toLowerCase() });\r\n\r\n    setSearchValue(inputValue.value.toLowerCase());\r\n    inputValue.value = '';\r\n  }\r\n\r\n  // console.log(moviesList);\r\n\r\n  return (\r\n    <Container>\r\n      <form onSubmit={getSearchValue}>\r\n        <input type=\"text\" placeholder=\"Search...\" name=\"searchValue\" />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n\r\n      {moviesList && <MoviesList moviesList={moviesList} to={''} />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MoviesPage;\r\n","import axios from 'axios';\r\n\r\nconst KEY = '60602d7d98238c7dbe59ac7831dbe9a7';\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\n\r\nexport async function fetchTrendingMovies() {\r\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchMovieDetails(movieId) {\r\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchMovieCast(movieId) {\r\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchMovieReviews(movieId) {\r\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchSearchValue(searchValue) {\r\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${searchValue}&page=1`);\r\n  return response.data;\r\n}\r\n"],"names":["moviesList","to","location","useLocation","map","id","title","state","useSearchParams","searchParams","setSearchParams","useState","get","setSearchValue","setMoviesList","useEffect","searchParamsQuery","fetchSearchValue","then","results","length","alert","Container","onSubmit","e","preventDefault","inputValue","currentTarget","children","searchValue","value","query","toLowerCase","type","placeholder","name","MoviesList","KEY","fetchTrendingMovies","axios","response","data","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}