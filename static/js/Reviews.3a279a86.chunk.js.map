{"version":3,"file":"static/js/Reviews.3a279a86.chunk.js","mappings":"yOACA,GAAgB,MAAQ,wB,SC4CxB,MAvCA,WACE,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACjCC,QAAQC,IAAIF,GAEZ,IAAMG,EAAaH,EAAQI,KAAI,YAC7B,MAAO,CACLC,GAFwD,EAA1BA,GAG9BC,OAHwD,EAAtBA,OAIlCC,QAJwD,EAAdA,YAO9Cb,EAAcS,QAEf,CAACR,KAKF,SAACa,EAAA,EAAD,UACGf,EAAWgB,OAAO,GACjB,eAAIC,UAAWC,EAAAA,KAAf,SACGlB,EAAWW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACd,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,SAOb,cAAGK,UAAWC,EAAAA,MAAd,4D,0MCrCFC,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IAAA,qCAAwCF,IAD1D,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCtB,GAAjC,uFACkBmB,IAAAA,IAAA,gBAAmBnB,EAAnB,oBAAsCiB,IADxD,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8BvB,GAA9B,uFACkBmB,IAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CiB,IADhE,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACkBmB,IAAAA,IAAA,gBAAmBnB,EAAnB,4BAA8CiB,IADhE,cACCG,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBN,IAAAA,IAAA,+BAAkCF,EAAlC,kBAA+CQ,EAA/C,YADlB,cACCL,EADD,yBAEEA,EAASC,MAFX,kEAtBPF,IAAAA,SAAAA,QAAyB","sources":["webpack://goit-react-hw-05-movies/./src/Views/Reviews/Reviews.module.css?cf61","Views/Reviews/Reviews.js","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Reviews_title__awbx4\"};","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchMovieReviews } from '../../services/moviesApi';\r\nimport Container from '../../Components/Container';\r\nimport s from './Reviews.module.css';\r\n\r\nfunction Reviews() {\r\n  const [reviewList, setReviewList] = useState([]);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetchMovieReviews(movieId).then(({ results }) => {\r\n      console.log(results);\r\n\r\n      const dataReview = results.map(({ id, author, content }) => {\r\n        return {\r\n          id,\r\n          author,\r\n          content,\r\n        };\r\n      });\r\n      setReviewList(dataReview);\r\n    });\r\n  }, [movieId]);\r\n\r\n\r\n\r\n  return (\r\n    <Container>\r\n      {reviewList.length>0 ? (\r\n        <ul className={s.list}>\r\n          {reviewList.map(({ id, author, content }) => (\r\n            <li key={id}>\r\n              <h3>{author}</h3>\r\n              <p>{content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className={s.title}>We do not have any reviews for this movie.</p>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Reviews;\r\n","import axios from 'axios';\r\n\r\nconst KEY = '60602d7d98238c7dbe59ac7831dbe9a7';\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\n\r\nexport async function fetchTrendingMovies() {\r\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchMovieDetails(movieId) {\r\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchMovieCast(movieId) {\r\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchMovieReviews(movieId) {\r\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchSearchValue(searchValue) {\r\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${searchValue}&page=1`);\r\n  return response.data;\r\n}\r\n"],"names":["useState","reviewList","setReviewList","movieId","useParams","useEffect","fetchMovieReviews","then","results","console","log","dataReview","map","id","author","content","Container","length","className","s","KEY","fetchTrendingMovies","axios","response","data","fetchMovieDetails","fetchMovieCast","fetchSearchValue","searchValue"],"sourceRoot":""}