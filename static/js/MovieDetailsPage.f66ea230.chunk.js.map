{"version":3,"file":"static/js/MovieDetailsPage.f66ea230.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/Components/MovieDescription/MovieDescription.module.css?46e5","Components/MovieDescription/MovieDescription.js","webpack://goit-react-hw-05-movies/./src/Components/MovieAdditionalnfo/MovieAdditionalnfo.module.css?d41b","Components/MovieAdditionalnfo/MovieAdditionalnfo.js","webpack://goit-react-hw-05-movies/./src/Views/MovieDetailsPage/MovieDetailsPage.module.css?e987","Views/MovieDetailsPage/MovieDetailsPage.js","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"MovieDescription_card__+86p-\"};","import s from './MovieDescription.module.css';\r\n\r\nfunction MovieDescription({ movie }) {\r\n  const { poster_path, title, release_date, vote_average, overview, genres } =\r\n    movie;\r\n  return (\r\n      <div className={s.card}>\r\n        <img\r\n          className={s.poster}\r\n          src={`https://image.tmdb.org/t/p/original${poster_path}`}\r\n          alt={title}\r\n        />\r\n        <ul>\r\n          <li>\r\n            <h2>\r\n              {title} ({release_date.slice(0, 4)})\r\n            </h2>\r\n            <p>\r\n              User Score: {vote_average ? `${vote_average * 10}%` : 'no score'}\r\n            </p>\r\n          </li>\r\n          <li>\r\n            <h3>Overview</h3>\r\n            <p>{overview}</p>\r\n          </li>\r\n          <li>\r\n            <h3>Genres</h3>\r\n            <p>{genres.map(genre => genre.name).join(', ')}</p>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default MovieDescription;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"MovieAdditionalnfo_title__VV3Mk\",\"list\":\"MovieAdditionalnfo_list__HEZ1g\",\"link\":\"MovieAdditionalnfo_link__gsoyw\",\"activeLink\":\"MovieAdditionalnfo_activeLink__5Dt7t MovieAdditionalnfo_link__gsoyw\",\"lines\":\"MovieAdditionalnfo_lines__7bCF1\"};","import { NavLink } from 'react-router-dom';\r\nimport Container from '../Container'\r\nimport s from './MovieAdditionalnfo.module.css';\r\n\r\nfunction MovieAdditionalnfo() {\r\n  return (\r\n    <div className={s.lines}>\r\n      <Container>\r\n      <h2 className={s.title}>Additional information</h2>\r\n\r\n      <ul className={s.list}>\r\n        <li>\r\n          <NavLink to=\"cast\"\r\n          className={({ isActive }) => (isActive ? s['activeLink'] : s['link'])}>Cast</NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink to=\"reviews\"\r\n          className={({ isActive }) => (isActive ? s['activeLink'] : s['link'])}>Reviews</NavLink>\r\n        </li>\r\n      </ul>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieAdditionalnfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MovieDetailsPage_btn__PkOcT\"};","import { useEffect, useState } from 'react';\r\nimport { Outlet, useNavigate, useParams, useLocation } from 'react-router-dom';\r\nimport { fetchMovieDetails } from '../../services/moviesApi';\r\nimport Container from '../../Components/Container';\r\nimport MovieDescription from '../../Components/MovieDescription';\r\nimport MovieAdditionalnfo from '../../Components/MovieAdditionalnfo';\r\nimport s from './MovieDetailsPage.module.css';\r\n\r\nfunction MovieDetailsPage() {\r\n  const [movie, setMovie] = useState(null);\r\n  const [prevLocation, setPrevLocation] = useState();\r\n\r\n  const { movieId } = useParams();\r\n\r\n  //* откуда пришли\r\n  const navigate = useNavigate(); \r\n  // console.log(\"~ navigate\", navigate)\r\n\r\n  //* где находимся\r\n  const location = useLocation(); \r\n  // console.log('~ location', location); // pathname: '/movies/507086'\r\n  // console.log('5555', location.state); // pathname: '/'\r\n\r\n  useEffect(() => {\r\n    fetchMovieDetails(movieId).then(result => {\r\n      setMovie(result);\r\n      // console.log(result);\r\n    });\r\n  }, [movieId]);\r\n\r\n  useEffect(() => {\r\n    const { state } = location;\r\n    if (!state) {\r\n      return;\r\n    }\r\n\r\n    console.log(state)\r\n    // {pathname: '/movies', search: '?query=word',...} - 'word' введенное значение в поисковик\r\n\r\n    setPrevLocation(`${state.pathname}${state.search}`);\r\n    //                 откуда пришли    что вводили\r\n  }, [location]);\r\n\r\n  function goToPrevPage() {\r\n    navigate(prevLocation ? prevLocation : '/');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <button type=\"button\" className={s.btn} onClick={goToPrevPage}>\r\n          Go back\r\n        </button>\r\n        {movie && <MovieDescription movie={movie} />}\r\n      </Container>\r\n      \r\n      <MovieAdditionalnfo />\r\n      <Outlet />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n","import axios from 'axios';\r\n\r\nconst KEY = '60602d7d98238c7dbe59ac7831dbe9a7';\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\r\n\r\nexport async function fetchTrendingMovies() {\r\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchMovieDetails(movieId) {\r\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchMovieCast(movieId) {\r\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchMovieReviews(movieId) {\r\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchSearchValue(searchValue) {\r\n  const response = await axios.get(`search/movie?api_key=${KEY}&query=${searchValue}&page=1`);\r\n  return response.data;\r\n}\r\n"],"names":["movie","poster_path","title","release_date","vote_average","overview","genres","className","s","src","alt","slice","map","genre","name","join","Container","to","isActive","useState","setMovie","prevLocation","setPrevLocation","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","fetchMovieDetails","then","result","state","console","log","pathname","search","type","onClick","KEY","fetchTrendingMovies","axios","response","data","fetchMovieCast","fetchMovieReviews","fetchSearchValue","searchValue"],"sourceRoot":""}